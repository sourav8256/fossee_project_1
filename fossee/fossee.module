<?php

function fossee_menu() {
  $items = array();

  $items['form'] = array( //this creates a URL that will call this form at "examples/form-example"
    'title' => 'Student Form', //page title
    'description' => 'Form for entering student data.',
    'page callback' => 'drupal_get_form', //this is the function that will be called when the page is accessed.  for a form, use drupal_get_form
    'page arguments' => array('fossee_form'), //put the name of the form here
    'access callback' => TRUE
  );

  $items['data'] = array( //this creates a URL that will call this form at "examples/form-example"
    'title' => 'Student Data Query', //page title
    'description' => 'Form for viewing student data.',
    'page callback' => 'drupal_get_form', //this is the function that will be called when the page is accessed.  for a form, use drupal_get_form
    'page arguments' => array('fossee_query_form'), //put the name of the form here
    'access callback' => TRUE
  );

  $items['display/%'] = array( //this creates a URL that will call this form at "examples/form-example"
    'title' => 'Student Data Display', //page title
    'description' => 'Form for viewing student data.',
     'page callback' => 'fossee_query_form_display', //this is the function that will be called when the page is accessed.  for a form, use drupal_get_form
     'page arguments' => array(1),
    'access callback' => TRUE
  );

  $items['display'] = array( //this creates a URL that will call this form at "examples/form-example"
    'title' => 'Student Data Display', //page title
    'description' => 'Form for viewing student data.',
     'page callback' => 'fossee_query_form_display', //this is the function that will be called when the page is accessed.  for a form, use drupal_get_form
     'page arguments' => array(1),
    'access callback' => TRUE
  );

  return $items;
}

function fossee_form($form, &$form_state) {
  

$form['student_name'] = array(
    '#type' => 'textfield',
    '#title' => 'Name.:',
    '#size' => 30,
    '#maxlength' => 30,
    '#required' => TRUE,  
  );

$form['student_email'] = array(
    '#type' => 'textfield',
    '#title' => 'Email Address .:',
    '#size' => 30,
    '#maxlength' => 30,
    '#required' => TRUE,  
  );


$form['student_roll'] = array(
    '#type' => 'textfield',
    '#title' => 'Enrollment Number .:',
    '#size' => 30,
    '#maxlength' => 30,
    '#required' => TRUE,  
  );


$form['student_phone'] = array(
    '#type' => 'textfield',
    '#title' => 'Phone Number .:',
    '#size' => 30,
    '#maxlength' => 30,
    '#required' => TRUE,  
  );


$form['student_bloodgroup'] = array(
    '#type' => 'textfield',
    '#title' => 'Blood Group .:',
    '#size' => 30,
    '#maxlength' => 30,
    '#required' => TRUE,  
  );


$form['student_semester'] = array(
    '#type' => 'textfield',
    '#title' => 'Semester .:',
    '#size' => 30,
    '#maxlength' => 30,
    '#required' => TRUE,  
  );



  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  
  return $form;
}

function fossee_form_validate($form, &$form_state) {
  if ((strlen($form_state['values']['student_email']) < 10)){
    form_set_error('Phone Number', t('Phone number must be 10 numbers long.'));
  }
}

function fossee_form_submit($form, &$form_state) {
    db_insert('student_db_1')
  ->fields(array(
  
  //'uid' => $user->uid,

  'student_name' => $form_state['values']['student_name'],
  'student_email' => $form_state['values']['student_email'],
  'student_roll' => $form_state['values']['student_roll'],
  

  ))->execute();
  drupal_set_message("successfully saved data to Database 1");
  


 db_insert('student_db_2')
  ->fields(array(
  'student_email' => $form_state['values']['student_email'],
  'student_phone' => $form_state['values']['student_phone'],
  'student_bloodgroup' => $form_state['values']['student_bloodgroup'],
  'student_semester' => $form_state['values']['student_semester'],

  ))->execute();
  drupal_set_message("successfully saved data to Database 2");
  

}







function fossee_query_form($form, &$form_state) {
  
$form['student_email'] = array(
    '#type' => 'textfield',
    '#title' => 'Email Address .:',
    '#size' => 30,
    '#maxlength' => 30,
    '#required' => TRUE,  
  );
  
$form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}

function fossee_query_form_validate($form, &$form_state) {
  // if (sizeof($form_state['values']['email'])<1){
  //   form_set_error('Email error : ', t('The email seems invalid please check again.'));
  // }
}

function fossee_query_form_submit($form, &$form_state) {
    
$form_state['redirect'] = 'display/'.$form_state['values']['student_email'];


}












function fossee_query_form_display($arg_email) {
    
$rows = array();


    $header = array(
      array('data' => t('Name'), 'field' => 'student_email', 'sort' => 'desc'),
      array('data' => t('Email'), 'colspan' => 1),
      array('data' => t('Enrollment'), 'colspan' => 1),
      array('data' => t('Phone Number'), 'colspan' => 1),
      array('data' => t('Blood Group'), 'colspan' => 1),
      array('data' => t('Semester'), 'colspan' => 1),
    );

$query = db_select('student_db_1', 't');



$query ->fields('t', array('student_email', 'student_name', 'student_roll'));
if($arg_email!=null){
  $query->condition('t.student_email',$arg_email,"=");
}
$query ->fields('n', array('student_email', 'student_phone', 'student_bloodgroup','student_semester'));
$query->join('student_db_2', 'n', 'n.student_email = t.student_email');
 

   $table_sort = $query->extend('TableSort') // Add table sort extender.
                        ->orderByHeader($header); // Add order by headers.
    $pager = $table_sort->extend('PagerDefault')
                        ->limit(20);  // here you can limit the number of data per page.
    $result = $pager->execute();

    foreach($result as $res) {
      $rows[] = array($res->student_name, 
                      $res->student_email,
                      $res->student_roll,
                      $res->student_phone,
                      $res->student_bloodgroup,
                      $res->student_semester,
                    );
    }


    $output = '';

    if (!empty($rows)) {

      $output = theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('id' => 'sort-table')));

      $output .= theme('pager');

    }

    else {

      $output .= t("No results found.");

    }

    return $output;


}


















?>
